
В файле DOC/Лог 21_03_18.txt  информация по импульсам. Эти данные пока можно использовать как образец сигналов.

ТЗ на Март 2018г.

0) Переделываем стартовое меню "НАСТРОЙКИ"для увеличения количества пунктов и подпунктов.

1) Формируем переменные для хранения количества импульсов прерывания. Переменная должна храниться в энергонезависимой памяти.
По каждому каналу своя переменная. Предусмотреть ввод данных как с меню, так и дистанционно по RS485.
Переменные нужны для контроля количества импульсов. При меньшем или большем количестве поступивших прерываний от заданного – ошибка.

2) Формируем переменные для хранения дельт количества импульсов. К примеру +\- 2 импульса. Ведь не всегда планка может точно встать в исходное или еще чего хз.
По каждому каналу своя дельта. Предусмотреть ввод данных дельт как с меню, так и дистанционно по RS485.

3) Создаем подпрограмму формирования образцовых графиков по каждому каналу. Храним в файле.

а) Формирование графиков по однократному срабатыванию системы.  
б) Формирование возможно по фактическому принудительному срабатыванию системы.
в) В случае если систему нельзя трогать, формируем по первому срабатыванию системы.
   Для этого выставляем флаг "сформировать образец по первому срабатыванию". После фиксации срабатывания флаг снимается.
   Возможно нужен флаг "эталон сформирован" иначе сложно сранивать не имея эталона.
г) Создание эталона вручную, создание текстового файла с последующей загрузкой на SD.
д) Формируем дельты отклонений по каждому каналу. Точное совпадение сигналов мало вероятно.


4) Регистрируем дату и время срабатывания системы.  Пишем в файл.
5) Регистрируем количество срабатывания защиты. Пишем в файл.

6) Формируем переменные для хранения количества срабатываний моторесурса. Предусмотреть ввод данных количества срабатываний моторесурса как с меню, так и дистанционно по RS485.
7) Подсчитываем  моторесурс  системы.  Принцип формирования моторесурса .  К примеру закладываем 1000 срабатываний. Регистрируем количество срабатываний и высчитываем процент 
использованного ресурса.  Возможно  необходимо  отображать остаток ресурса.

8) Определяем,  что было отключение или подключение штанги.   Пишем в файл.

9) Записываем данные на SD в удобоваримом виде. Уточнить формат данных.
Возможно в нескольких разных файлах типа данные для построения графика, таблицу количества и даты срабатывания системы.

10) Сравниваем полученный график с образцовым (формируем отдельно с возможностью редактирования, задания параметров).

11) При срабатывании системы зажигаем желтый светодиод. Парралельно зажигаем зеленый светодиод если параметры в норме или красный если параметры вышли за пределы дельт отклонений.

12) Контроллируем вход  релейной  защиты  (PWM11, PWM12), Пока фиксируем срабатывание и выставляем сигнал на контакт №4 (описание контактов ниже). Можно применить прерывания (если получиться обработать).

12) Сброс сигнала срабатывания системы желтой кнопкой или дистанционно по RS485.

13) Формируем сигнал срабатывания системы на выводах АСУ ТП 

Выходные сигналы  АСУ ТП (PIN42,PIN43,PIN44,PIN50)
№1 - НО контакта: в схему УРОВ (срабатывание УРОВ) (параллельно желтому светодиоду)
№2 - 1 НЗ контакт: в схему ЦС (Live-контакт) хз что это. Просто зарезервируем.
№3 - НО контакт: «неисправность выключателя» (параллельно красному светодиоду. При выходе параметров кривой движения за допустимые границы)
№4 - НО контакт: фиксируем срабативание по входу  релейной  защиты.
Возможно создаем механизм правил, а там посмотрим, что на что будет реагировать. Точной информации от заказчика нет.

14) Продумать регистрацию возврата системы в исходное состояние. Создание флага "состояние исходное".

15) Переделываем стартовое меню "НАСТРОЙКИ"для увеличения количества пунктов и подпунктов.

16) Индикация версии ПО на дисплее, а также передача информации о версии по каналу RS485.

17) Создание протокола обмена информацией по каналу RS485. В последующих версиях будет подключение и ESP WiFi.

19) Контролируем источники питания системы.  Показатели на первом экране. При норме цифры зеленого цвета. Вне диапазона - красного.
    а)«200вольт» - AD9,
	б)«3V3»- AD10, 
	в)«5V0»-AD11
	Запись в лог диагностики.
	
20) Контроль температуры в корпусе. Запись в лог диагностики.
	
21) Контролируем исправность подключения индуктивных датчиков. Входа AD6,AD7,AD8. При исправных присутствует некий потенциал (уточним). Обрыв - потенциац ноль. Сравниваем с некой величиной по каждому каналу.
    Запись в лог диагностики.
	
22) Создаем (или уже создан) механизм контроля нажатия кнопок. Как дальше применять уточним.

23) Запускаем механизм Watch-Dog микроконтроллера. Необходимо уточнить подпрограмму и настройки. Применять на завершающем этапе.

24) Создание меню просмотра файлов эталонов, логов, событий.

25) Ручная и дистанционная очистка архива (кривые перемещения, долговременная диагностика – после замены или кап ремонта выключателя).







